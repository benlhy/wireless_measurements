C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\Ben\Doc
                    -uments\Git\wireless_measurements\software\firmware\EFM8_SWM\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WA
                    -RNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(0,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\Ben\Documents
                    -\Git\wireless_measurements\software\firmware\EFM8_SWM\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1/
                    -/kits/common/drivers/efm8_retargetserial;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/shared/si
                    -8051Base;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.1//Device/EFM8LB1/inc) PRINT(.\src\InitDevice.lst) 
                    -COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8LB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        // Save the SFRPAGE
  27   1        uint8_t SFRPAGE_save = SFRPAGE;
  28   1        WDT_0_enter_DefaultMode_from_RESET ();
  29   1        PORTS_0_enter_DefaultMode_from_RESET ();
  30   1        PORTS_1_enter_DefaultMode_from_RESET ();
  31   1        PORTS_2_enter_DefaultMode_from_RESET ();
  32   1        PORTS_3_enter_DefaultMode_from_RESET ();
  33   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  34   1        ADC_0_enter_DefaultMode_from_RESET ();
  35   1        VREF_0_enter_DefaultMode_from_RESET ();
  36   1        LFOSC_0_enter_DefaultMode_from_RESET ();
  37   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  38   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  39   1        TIMER16_2_enter_DefaultMode_from_RESET ();
  40   1        TIMER16_3_enter_DefaultMode_from_RESET ();
  41   1        TIMER16_4_enter_DefaultMode_from_RESET ();
  42   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  43   1        UART_0_enter_DefaultMode_from_RESET ();
  44   1        INTERRUPT_0_enter_DefaultMode_from_RESET ();
  45   1        // Restore the SFRPAGE
  46   1        SFRPAGE = SFRPAGE_save;
  47   1        // [Config Calls]$
  48   1      
  49   1      }
  50          
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 2   

  51          //================================================================================
  52          // WDT_0_enter_DefaultMode_from_RESET
  53          //================================================================================
  54          extern void
  55          WDT_0_enter_DefaultMode_from_RESET (void)
  56          {
  57   1        // $[Watchdog Timer Init Variable Declarations]
  58   1        uint32_t i;
  59   1        bool ea;
  60   1        // [Watchdog Timer Init Variable Declarations]$
  61   1      
  62   1        // $[WDTCN - Watchdog Timer Control]
  63   1        // Deprecated
  64   1        // [WDTCN - Watchdog Timer Control]$
  65   1      
  66   1        // $[WDTCN_2 - Watchdog Timer Control]
  67   1        SFRPAGE = 0x00;
  68   1      
  69   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  70   1        WDTCN = 0xA5;
  71   1      
  72   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  73   1        for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++)
  74   1          {
  75   2            NOP ();
  76   2          }
  77   1      
  78   1        // Disable WDT
  79   1        ea = IE_EA;
  80   1        IE_EA = 0;
  81   1        WDTCN = 0xDE;
  82   1        WDTCN = 0xAD;
  83   1        IE_EA = ea;
  84   1      
  85   1        // [WDTCN_2 - Watchdog Timer Control]$
  86   1      
  87   1      }
  88          
  89          //================================================================================
  90          // PORTS_0_enter_DefaultMode_from_RESET
  91          //================================================================================
  92          extern void
  93          PORTS_0_enter_DefaultMode_from_RESET (void)
  94          {
  95   1        // $[P0 - Port 0 Pin Latch]
  96   1        // [P0 - Port 0 Pin Latch]$
  97   1      
  98   1        // $[P0MDOUT - Port 0 Output Mode]
  99   1        /***********************************************************************
 100   1         - P0.0 output is open-drain
 101   1         - P0.1 output is open-drain
 102   1         - P0.2 output is open-drain
 103   1         - P0.3 output is open-drain
 104   1         - P0.4 output is push-pull
 105   1         - P0.5 output is open-drain
 106   1         - P0.6 output is open-drain
 107   1         - P0.7 output is open-drain
 108   1         ***********************************************************************/
 109   1        P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 110   1            | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN | P0MDOUT_B4__PUSH_PULL
 111   1            | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__OPEN_DRAIN
 112   1            | P0MDOUT_B7__OPEN_DRAIN;
 113   1        // [P0MDOUT - Port 0 Output Mode]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 3   

 114   1      
 115   1        // $[P0MDIN - Port 0 Input Mode]
 116   1        /***********************************************************************
 117   1         - P0.0 pin is configured for analog mode
 118   1         - P0.1 pin is configured for digital mode
 119   1         - P0.2 pin is configured for digital mode
 120   1         - P0.3 pin is configured for digital mode
 121   1         - P0.4 pin is configured for digital mode
 122   1         - P0.5 pin is configured for digital mode
 123   1         - P0.6 pin is configured for digital mode
 124   1         - P0.7 pin is configured for digital mode
 125   1         ***********************************************************************/
 126   1        P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__DIGITAL | P0MDIN_B2__DIGITAL
 127   1            | P0MDIN_B3__DIGITAL | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 128   1            | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 129   1        // [P0MDIN - Port 0 Input Mode]$
 130   1      
 131   1        // $[P0SKIP - Port 0 Skip]
 132   1        /***********************************************************************
 133   1         - P0.0 pin is skipped by the crossbar
 134   1         - P0.1 pin is not skipped by the crossbar
 135   1         - P0.2 pin is not skipped by the crossbar
 136   1         - P0.3 pin is not skipped by the crossbar
 137   1         - P0.4 pin is not skipped by the crossbar
 138   1         - P0.5 pin is not skipped by the crossbar
 139   1         - P0.6 pin is skipped by the crossbar
 140   1         - P0.7 pin is not skipped by the crossbar
 141   1         ***********************************************************************/
 142   1        P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__NOT_SKIPPED | P0SKIP_B2__NOT_SKIPPED
 143   1            | P0SKIP_B3__NOT_SKIPPED | P0SKIP_B4__NOT_SKIPPED | P0SKIP_B5__NOT_SKIPPED
 144   1            | P0SKIP_B6__SKIPPED | P0SKIP_B7__NOT_SKIPPED;
 145   1        // [P0SKIP - Port 0 Skip]$
 146   1      
 147   1        // $[P0MASK - Port 0 Mask]
 148   1        /***********************************************************************
 149   1         - P0.0 pin logic value is ignored and will not cause a port mismatch
 150   1         event
 151   1         - P0.1 pin logic value is ignored and will not cause a port mismatch
 152   1         event
 153   1         - P0.2 pin logic value is ignored and will not cause a port mismatch
 154   1         event
 155   1         - P0.3 pin logic value is ignored and will not cause a port mismatch
 156   1         event
 157   1         - P0.4 pin logic value is ignored and will not cause a port mismatch
 158   1         event
 159   1         - P0.5 pin logic value is ignored and will not cause a port mismatch
 160   1         event
 161   1         - P0.6 pin logic value is compared to P0MAT.6
 162   1         - P0.7 pin logic value is ignored and will not cause a port mismatch
 163   1         event
 164   1         ***********************************************************************/
 165   1        P0MASK = P0MASK_B0__IGNORED | P0MASK_B1__IGNORED | P0MASK_B2__IGNORED
 166   1            | P0MASK_B3__IGNORED | P0MASK_B4__IGNORED | P0MASK_B5__IGNORED
 167   1            | P0MASK_B6__COMPARED | P0MASK_B7__IGNORED;
 168   1        // [P0MASK - Port 0 Mask]$
 169   1      
 170   1        // $[P0MAT - Port 0 Match]
 171   1        // [P0MAT - Port 0 Match]$
 172   1      
 173   1      }
 174          
 175          //================================================================================
 176          // PORTS_1_enter_DefaultMode_from_RESET
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 4   

 177          //================================================================================
 178          extern void
 179          PORTS_1_enter_DefaultMode_from_RESET (void)
 180          {
 181   1        // $[P1 - Port 1 Pin Latch]
 182   1        // [P1 - Port 1 Pin Latch]$
 183   1      
 184   1        // $[P1MDOUT - Port 1 Output Mode]
 185   1        /***********************************************************************
 186   1         - P1.0 output is push-pull
 187   1         - P1.1 output is open-drain
 188   1         - P1.2 output is push-pull
 189   1         - P1.3 output is open-drain
 190   1         - P1.4 output is open-drain
 191   1         - P1.5 output is open-drain
 192   1         - P1.6 output is open-drain
 193   1         - P1.7 output is open-drain
 194   1         ***********************************************************************/
 195   1        P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 196   1            | P1MDOUT_B2__PUSH_PULL | P1MDOUT_B3__OPEN_DRAIN | P1MDOUT_B4__OPEN_DRAIN
 197   1            | P1MDOUT_B5__OPEN_DRAIN | P1MDOUT_B6__OPEN_DRAIN
 198   1            | P1MDOUT_B7__OPEN_DRAIN;
 199   1        // [P1MDOUT - Port 1 Output Mode]$
 200   1      
 201   1        // $[P1MDIN - Port 1 Input Mode]
 202   1        /***********************************************************************
 203   1         - P1.0 pin is configured for digital mode
 204   1         - P1.1 pin is configured for digital mode
 205   1         - P1.2 pin is configured for digital mode
 206   1         - P1.3 pin is configured for digital mode
 207   1         - P1.4 pin is configured for analog mode
 208   1         - P1.5 pin is configured for analog mode
 209   1         - P1.6 pin is configured for analog mode
 210   1         - P1.7 pin is configured for analog mode
 211   1         ***********************************************************************/
 212   1        P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 213   1            | P1MDIN_B3__DIGITAL | P1MDIN_B4__ANALOG | P1MDIN_B5__ANALOG
 214   1            | P1MDIN_B6__ANALOG | P1MDIN_B7__ANALOG;
 215   1        // [P1MDIN - Port 1 Input Mode]$
 216   1      
 217   1        // $[P1SKIP - Port 1 Skip]
 218   1        /***********************************************************************
 219   1         - P1.0 pin is skipped by the crossbar
 220   1         - P1.1 pin is not skipped by the crossbar
 221   1         - P1.2 pin is skipped by the crossbar
 222   1         - P1.3 pin is not skipped by the crossbar
 223   1         - P1.4 pin is skipped by the crossbar
 224   1         - P1.5 pin is skipped by the crossbar
 225   1         - P1.6 pin is skipped by the crossbar
 226   1         - P1.7 pin is skipped by the crossbar
 227   1         ***********************************************************************/
 228   1        P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__NOT_SKIPPED | P1SKIP_B2__SKIPPED
 229   1            | P1SKIP_B3__NOT_SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 230   1            | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 231   1        // [P1SKIP - Port 1 Skip]$
 232   1      
 233   1        // $[P1MASK - Port 1 Mask]
 234   1        // [P1MASK - Port 1 Mask]$
 235   1      
 236   1        // $[P1MAT - Port 1 Match]
 237   1        // [P1MAT - Port 1 Match]$
 238   1      
 239   1      }
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 5   

 240          
 241          //================================================================================
 242          // PORTS_2_enter_DefaultMode_from_RESET
 243          //================================================================================
 244          extern void
 245          PORTS_2_enter_DefaultMode_from_RESET (void)
 246          {
 247   1        // $[P2 - Port 2 Pin Latch]
 248   1        // [P2 - Port 2 Pin Latch]$
 249   1      
 250   1        // $[P2MDOUT - Port 2 Output Mode]
 251   1        /***********************************************************************
 252   1         - P2.0 output is push-pull
 253   1         - P2.1 output is open-drain
 254   1         - P2.2 output is open-drain
 255   1         - P2.3 output is push-pull
 256   1         - P2.4 output is open-drain
 257   1         - P2.5 output is open-drain
 258   1         - P2.6 output is open-drain
 259   1         ***********************************************************************/
 260   1        P2MDOUT = P2MDOUT_B0__PUSH_PULL | P2MDOUT_B1__OPEN_DRAIN
 261   1            | P2MDOUT_B2__OPEN_DRAIN | P2MDOUT_B3__PUSH_PULL | P2MDOUT_B4__OPEN_DRAIN
 262   1            | P2MDOUT_B5__OPEN_DRAIN | P2MDOUT_B6__OPEN_DRAIN;
 263   1        // [P2MDOUT - Port 2 Output Mode]$
 264   1      
 265   1        // $[P2MDIN - Port 2 Input Mode]
 266   1        // [P2MDIN - Port 2 Input Mode]$
 267   1      
 268   1        // $[P2SKIP - Port 2 Skip]
 269   1        /***********************************************************************
 270   1         - P2.0 pin is skipped by the crossbar
 271   1         - P2.1 pin is not skipped by the crossbar
 272   1         - P2.2 pin is not skipped by the crossbar
 273   1         - P2.3 pin is skipped by the crossbar
 274   1         ***********************************************************************/
 275   1        SFRPAGE = 0x20;
 276   1        P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__NOT_SKIPPED | P2SKIP_B2__NOT_SKIPPED
 277   1            | P2SKIP_B3__SKIPPED;
 278   1        // [P2SKIP - Port 2 Skip]$
 279   1      
 280   1        // $[P2MASK - Port 2 Mask]
 281   1        // [P2MASK - Port 2 Mask]$
 282   1      
 283   1        // $[P2MAT - Port 2 Match]
 284   1        // [P2MAT - Port 2 Match]$
 285   1      
 286   1      }
 287          
 288          //================================================================================
 289          // PBCFG_0_enter_DefaultMode_from_RESET
 290          //================================================================================
 291          extern void
 292          PBCFG_0_enter_DefaultMode_from_RESET (void)
 293          {
 294   1        // $[XBR2 - Port I/O Crossbar 2]
 295   1        /***********************************************************************
 296   1         - Weak Pullups enabled 
 297   1         - Crossbar enabled
 298   1         - UART1 I/O unavailable at Port pin
 299   1         - UART1 RTS1 unavailable at Port pin
 300   1         - UART1 CTS1 unavailable at Port pin
 301   1         ***********************************************************************/
 302   1        SFRPAGE = 0x00;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 6   

 303   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 304   1            | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 305   1            | XBR2_URT1CTSE__DISABLED;
 306   1        // [XBR2 - Port I/O Crossbar 2]$
 307   1      
 308   1        // $[PRTDRV - Port Drive Strength]
 309   1        // [PRTDRV - Port Drive Strength]$
 310   1      
 311   1        // $[XBR0 - Port I/O Crossbar 0]
 312   1        /***********************************************************************
 313   1         - UART0 TX0, RX0 routed to Port pins P0.4 and P0.5
 314   1         - SPI I/O unavailable at Port pins
 315   1         - SMBus 0 I/O unavailable at Port pins
 316   1         - CP0 unavailable at Port pin
 317   1         - Asynchronous CP0 unavailable at Port pin
 318   1         - CP1 unavailable at Port pin
 319   1         - Asynchronous CP1 unavailable at Port pin
 320   1         - SYSCLK unavailable at Port pin
 321   1         ***********************************************************************/
 322   1        XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 323   1            | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 324   1            | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 325   1        // [XBR0 - Port I/O Crossbar 0]$
 326   1      
 327   1        // $[XBR1 - Port I/O Crossbar 1]
 328   1        // [XBR1 - Port I/O Crossbar 1]$
 329   1      
 330   1      }
 331          
 332          //================================================================================
 333          // ADC_0_enter_DefaultMode_from_RESET
 334          //================================================================================
 335          extern void
 336          ADC_0_enter_DefaultMode_from_RESET (void)
 337          {
 338   1        // $[ADC0CN2 - ADC0 Control 2]
 339   1        /***********************************************************************
 340   1         - ADC0 conversion initiated on overflow of Timer 2
 341   1         - The ADC accumulator is over-written with the results of any conversion
 342   1         ***********************************************************************/
 343   1        ADC0CN2 = ADC0CN2_ADCM__TIMER2 | ADC0CN2_PACEN__PAC_DISABLED;
 344   1        // [ADC0CN2 - ADC0 Control 2]$
 345   1      
 346   1        // $[ADC0CN1 - ADC0 Control 1]
 347   1        /***********************************************************************
 348   1         - ADC0 operates in 14-bit mode
 349   1         - Right justified. No shifting applied
 350   1         - Perform and Accumulate 1 conversion
 351   1         ***********************************************************************/
 352   1        ADC0CN1 = ADC0CN1_ADBITS__14_BIT | ADC0CN1_ADSJST__RIGHT_NO_SHIFT
 353   1            | ADC0CN1_ADRPT__ACC_1;
 354   1        // [ADC0CN1 - ADC0 Control 1]$
 355   1      
 356   1        // $[ADC0MX - ADC0 Multiplexer Selection]
 357   1        /***********************************************************************
 358   1         - Select ADC0.13
 359   1         ***********************************************************************/
 360   1        ADC0MX = ADC0MX_ADC0MX__ADC0P13;
 361   1        // [ADC0MX - ADC0 Multiplexer Selection]$
 362   1      
 363   1        // $[ADC0CF2 - ADC0 Power Control]
 364   1        /***********************************************************************
 365   1         - The ADC0 ground reference is the GND pin
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 7   

 366   1         - The ADC0 voltage reference is the VREF pin 
 367   1         - Power Up Delay Time = 0x06
 368   1         ***********************************************************************/
 369   1        ADC0CF2 = ADC0CF2_GNDSL__GND_PIN | ADC0CF2_REFSL__VREF_PIN
 370   1            | (0x06 << ADC0CF2_ADPWR__SHIFT);
 371   1        // [ADC0CF2 - ADC0 Power Control]$
 372   1      
 373   1        // $[ADC0CF0 - ADC0 Configuration]
 374   1        /***********************************************************************
 375   1         - ADCCLK = SYSCLK
 376   1         - SAR Clock Divider = 0x01
 377   1         ***********************************************************************/
 378   1        ADC0CF0 = ADC0CF0_ADCLKSEL__SYSCLK | (0x01 << ADC0CF0_ADSC__SHIFT);
 379   1        // [ADC0CF0 - ADC0 Configuration]$
 380   1      
 381   1        // $[ADC0CF1 - ADC0 Configuration]
 382   1        /***********************************************************************
 383   1         - Disable low power mode
 384   1         - Conversion Tracking Time = 0x03
 385   1         ***********************************************************************/
 386   1        ADC0CF1 = ADC0CF1_ADLPM__LP_DISABLED | (0x03 << ADC0CF1_ADTK__SHIFT);
 387   1        // [ADC0CF1 - ADC0 Configuration]$
 388   1      
 389   1        // $[ADC0ASAL - ADC0 Autoscan Start Address Low Byte]
 390   1        // [ADC0ASAL - ADC0 Autoscan Start Address Low Byte]$
 391   1      
 392   1        // $[ADC0GTH - ADC0 Greater-Than High Byte]
 393   1        // [ADC0GTH - ADC0 Greater-Than High Byte]$
 394   1      
 395   1        // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 396   1        // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 397   1      
 398   1        // $[ADC0LTH - ADC0 Less-Than High Byte]
 399   1        // [ADC0LTH - ADC0 Less-Than High Byte]$
 400   1      
 401   1        // $[ADC0LTL - ADC0 Less-Than Low Byte]
 402   1        // [ADC0LTL - ADC0 Less-Than Low Byte]$
 403   1      
 404   1        // $[ADC0ASCT - ADC0 Autoscan Output Count]
 405   1        // [ADC0ASCT - ADC0 Autoscan Output Count]$
 406   1      
 407   1        // $[ADC0ASAH - ADC0 Autoscan Start Address High Byte]
 408   1        // [ADC0ASAH - ADC0 Autoscan Start Address High Byte]$
 409   1      
 410   1        // $[ADC0ASCF - ADC0 Autoscan Configuration]
 411   1        // [ADC0ASCF - ADC0 Autoscan Configuration]$
 412   1      
 413   1        // $[ADC0CN0 - ADC0 Control 0]
 414   1        /***********************************************************************
 415   1         - Enable ADC0 
 416   1         - The on-chip PGA gain is 0.75
 417   1         - Power down when ADC is idle 
 418   1         ***********************************************************************/
 419   1        ADC0CN0 &= ~ADC0CN0_ADGN__FMASK;
 420   1        ADC0CN0 |= ADC0CN0_ADEN__ENABLED | ADC0CN0_ADGN__GAIN_0P75
 421   1            | ADC0CN0_IPOEN__POWER_DOWN;
 422   1        // [ADC0CN0 - ADC0 Control 0]$
 423   1      
 424   1      }
 425          
 426          //================================================================================
 427          // CIP51_0_enter_DefaultMode_from_RESET
 428          //================================================================================
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 8   

 429          extern void
 430          CIP51_0_enter_DefaultMode_from_RESET (void)
 431          {
 432   1        // $[PFE0CN - Prefetch Engine Control]
 433   1        // [PFE0CN - Prefetch Engine Control]$
 434   1      
 435   1      }
 436          
 437          //================================================================================
 438          // CLOCK_0_enter_DefaultMode_from_RESET
 439          //================================================================================
 440          extern void
 441          CLOCK_0_enter_DefaultMode_from_RESET (void)
 442          {
 443   1        // $[HFOSC1 Setup]
 444   1        // [HFOSC1 Setup]$
 445   1      
 446   1        // $[CLKSEL - Clock Select]
 447   1        /***********************************************************************
 448   1         - Clock derived from the Internal High Frequency Oscillator 0
 449   1         - SYSCLK is equal to selected clock source divided by 1
 450   1         ***********************************************************************/
 451   1        CLKSEL = CLKSEL_CLKSL__HFOSC0 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 452   1        while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
 453   1          ;
 454   1        // [CLKSEL - Clock Select]$
 455   1      
 456   1      }
 457          
 458          //================================================================================
 459          // TIMER01_0_enter_DefaultMode_from_RESET
 460          //================================================================================
 461          extern void
 462          TIMER01_0_enter_DefaultMode_from_RESET (void)
 463          {
 464   1        // $[Timer Initialization]
 465   1        //Save Timer Configuration
 466   1        uint8_t TCON_save;
 467   1        TCON_save = TCON;
 468   1        //Stop Timers
 469   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 470   1      
 471   1        // [Timer Initialization]$
 472   1      
 473   1        // $[TH0 - Timer 0 High Byte]
 474   1        // [TH0 - Timer 0 High Byte]$
 475   1      
 476   1        // $[TL0 - Timer 0 Low Byte]
 477   1        // [TL0 - Timer 0 Low Byte]$
 478   1      
 479   1        // $[TH1 - Timer 1 High Byte]
 480   1        /***********************************************************************
 481   1         - Timer 1 High Byte = 0xF7
 482   1         ***********************************************************************/
 483   1        TH1 = (0xF7 << TH1_TH1__SHIFT);
 484   1        // [TH1 - Timer 1 High Byte]$
 485   1      
 486   1        // $[TL1 - Timer 1 Low Byte]
 487   1        // [TL1 - Timer 1 Low Byte]$
 488   1      
 489   1        // $[Timer Restoration]
 490   1        //Restore Timer Configuration
 491   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 9   

 492   1      
 493   1        // [Timer Restoration]$
 494   1      
 495   1      }
 496          
 497          //================================================================================
 498          // TIMER16_2_enter_DefaultMode_from_RESET
 499          //================================================================================
 500          extern void
 501          TIMER16_2_enter_DefaultMode_from_RESET (void)
 502          {
 503   1        // $[Timer Initialization]
 504   1        // Save Timer Configuration
 505   1        uint8_t TMR2CN0_TR2_save;
 506   1        TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 507   1        // Stop Timer
 508   1        TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 509   1        // [Timer Initialization]$
 510   1      
 511   1        // $[TMR2CN1 - Timer 2 Control 1]
 512   1        // [TMR2CN1 - Timer 2 Control 1]$
 513   1      
 514   1        // $[TMR2CN0 - Timer 2 Control]
 515   1        // [TMR2CN0 - Timer 2 Control]$
 516   1      
 517   1        // $[TMR2H - Timer 2 High Byte]
 518   1        /***********************************************************************
 519   1         - Timer 2 High Byte = 0xFF
 520   1         ***********************************************************************/
 521   1        TMR2H = (0xFF << TMR2H_TMR2H__SHIFT);
 522   1        // [TMR2H - Timer 2 High Byte]$
 523   1      
 524   1        // $[TMR2L - Timer 2 Low Byte]
 525   1        /***********************************************************************
 526   1         - Timer 2 Low Byte = 0x34
 527   1         ***********************************************************************/
 528   1        TMR2L = (0x34 << TMR2L_TMR2L__SHIFT);
 529   1        // [TMR2L - Timer 2 Low Byte]$
 530   1      
 531   1        // $[TMR2RLH - Timer 2 Reload High Byte]
 532   1        /***********************************************************************
 533   1         - Timer 2 Reload High Byte = 0xFF
 534   1         ***********************************************************************/
 535   1        TMR2RLH = (0xFF << TMR2RLH_TMR2RLH__SHIFT);
 536   1        // [TMR2RLH - Timer 2 Reload High Byte]$
 537   1      
 538   1        // $[TMR2RLL - Timer 2 Reload Low Byte]
 539   1        /***********************************************************************
 540   1         - Timer 2 Reload Low Byte = 0x34
 541   1         ***********************************************************************/
 542   1        TMR2RLL = (0x34 << TMR2RLL_TMR2RLL__SHIFT);
 543   1        // [TMR2RLL - Timer 2 Reload Low Byte]$
 544   1      
 545   1        // $[TMR2CN0]
 546   1        /***********************************************************************
 547   1         - Start Timer 2 running
 548   1         ***********************************************************************/
 549   1        TMR2CN0 |= TMR2CN0_TR2__RUN;
 550   1        // [TMR2CN0]$
 551   1      
 552   1        // $[Timer Restoration]
 553   1        // Restore Timer Configuration
 554   1        TMR2CN0 |= TMR2CN0_TR2_save;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 10  

 555   1        // [Timer Restoration]$
 556   1      
 557   1      }
 558          
 559          //================================================================================
 560          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 561          //================================================================================
 562          extern void
 563          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 564          {
 565   1        // $[CKCON0 - Clock Control 0]
 566   1        // [CKCON0 - Clock Control 0]$
 567   1      
 568   1        // $[CKCON1 - Clock Control 1]
 569   1        // [CKCON1 - Clock Control 1]$
 570   1      
 571   1        // $[TMOD - Timer 0/1 Mode]
 572   1        /***********************************************************************
 573   1         - Mode 0, 13-bit Counter/Timer
 574   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 575   1         - Timer Mode
 576   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 577   1         - Timer Mode
 578   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 579   1         ***********************************************************************/
 580   1        SFRPAGE = 0x00;
 581   1        TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 582   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 583   1        // [TMOD - Timer 0/1 Mode]$
 584   1      
 585   1        // $[TCON - Timer 0/1 Control]
 586   1        /***********************************************************************
 587   1         - Start Timer 1 running
 588   1         ***********************************************************************/
 589   1        TCON |= TCON_TR1__RUN;
 590   1        // [TCON - Timer 0/1 Control]$
 591   1      
 592   1      }
 593          
 594          //================================================================================
 595          // UART_0_enter_DefaultMode_from_RESET
 596          //================================================================================
 597          extern void
 598          UART_0_enter_DefaultMode_from_RESET (void)
 599          {
 600   1        // $[SCON0 - UART0 Serial Port Control]
 601   1        /***********************************************************************
 602   1         - UART0 reception enabled
 603   1         ***********************************************************************/
 604   1        SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 605   1        // [SCON0 - UART0 Serial Port Control]$
 606   1      
 607   1      }
 608          
 609          //================================================================================
 610          // INTERRUPT_0_enter_DefaultMode_from_RESET
 611          //================================================================================
 612          extern void
 613          INTERRUPT_0_enter_DefaultMode_from_RESET (void)
 614          {
 615   1        // $[EIE1 - Extended Interrupt Enable 1]
 616   1        /***********************************************************************
 617   1         - Enable interrupt requests generated by the ADINT flag
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 11  

 618   1         - Disable ADC0 Window Comparison interrupt
 619   1         - Disable CP0 interrupts
 620   1         - Disable CP1 interrupts
 621   1         - Enable interrupt requests generated by a Port Match
 622   1         - Disable all PCA0 interrupts
 623   1         - Disable all SMB0 interrupts
 624   1         - Disable Timer 3 interrupts
 625   1         ***********************************************************************/
 626   1        EIE1 = EIE1_EADC0__ENABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 627   1            | EIE1_ECP1__DISABLED | EIE1_EMAT__ENABLED | EIE1_EPCA0__DISABLED
 628   1            | EIE1_ESMB0__DISABLED | EIE1_ET3__DISABLED;
 629   1        // [EIE1 - Extended Interrupt Enable 1]$
 630   1      
 631   1        // $[EIE2 - Extended Interrupt Enable 2]
 632   1        // [EIE2 - Extended Interrupt Enable 2]$
 633   1      
 634   1        // $[EIP1H - Extended Interrupt Priority 1 High]
 635   1        // [EIP1H - Extended Interrupt Priority 1 High]$
 636   1      
 637   1        // $[EIP1 - Extended Interrupt Priority 1 Low]
 638   1        // [EIP1 - Extended Interrupt Priority 1 Low]$
 639   1      
 640   1        // $[EIP2 - Extended Interrupt Priority 2]
 641   1        // [EIP2 - Extended Interrupt Priority 2]$
 642   1      
 643   1        // $[EIP2H - Extended Interrupt Priority 2 High]
 644   1        // [EIP2H - Extended Interrupt Priority 2 High]$
 645   1      
 646   1        // $[IE - Interrupt Enable]
 647   1        /***********************************************************************
 648   1         - Enable each interrupt according to its individual mask setting
 649   1         - Disable external interrupt 0
 650   1         - Disable external interrupt 1
 651   1         - Disable all SPI0 interrupts
 652   1         - Disable all Timer 0 interrupt
 653   1         - Disable all Timer 1 interrupt
 654   1         - Disable Timer 2 interrupt
 655   1         - Disable UART0 interrupt
 656   1         ***********************************************************************/
 657   1        IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED | IE_ESPI0__DISABLED
 658   1            | IE_ET0__DISABLED | IE_ET1__DISABLED | IE_ET2__DISABLED
 659   1            | IE_ES0__DISABLED;
 660   1        // [IE - Interrupt Enable]$
 661   1      
 662   1        // $[IP - Interrupt Priority]
 663   1        // [IP - Interrupt Priority]$
 664   1      
 665   1        // $[IPH - Interrupt Priority High]
 666   1        // [IPH - Interrupt Priority High]$
 667   1      
 668   1      }
 669          
 670          extern void
 671          UARTE_1_enter_DefaultMode_from_RESET (void)
 672          {
 673   1      
 674   1      }
 675          
 676          extern void
 677          VREF_0_enter_DefaultMode_from_RESET (void)
 678          {
 679   1        // $[REF0CN - Voltage Reference Control]
 680   1        /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 12  

 681   1         - 2.4 V reference output to VREF pin
 682   1         ***********************************************************************/
 683   1        REF0CN = REF0CN_VREFSL__VREF_2P4;
 684   1        // [REF0CN - Voltage Reference Control]$
 685   1      
 686   1      }
 687          
 688          extern void
 689          EXTINT_0_enter_DefaultMode_from_RESET (void)
 690          {
 691   1        // $[IT01CF - INT0/INT1 Configuration]
 692   1        /***********************************************************************
 693   1         - INT0 input is active low
 694   1         - Select P0.1
 695   1         - INT1 input is active low
 696   1         - Select P0.2
 697   1         ***********************************************************************/
 698   1        IT01CF = IT01CF_IN0PL__ACTIVE_LOW | IT01CF_IN0SL__P0_1
 699   1            | IT01CF_IN1PL__ACTIVE_LOW | IT01CF_IN1SL__P0_2;
 700   1        // [IT01CF - INT0/INT1 Configuration]$
 701   1      
 702   1      }
 703          
 704          extern void
 705          PORTS_3_enter_DefaultMode_from_RESET (void)
 706          {
 707   1        // $[P3 - Port 3 Pin Latch]
 708   1        // [P3 - Port 3 Pin Latch]$
 709   1      
 710   1        // $[P3MDOUT - Port 3 Output Mode]
 711   1        /***********************************************************************
 712   1         - P3.0 output is push-pull
 713   1         - P3.1 output is open-drain
 714   1         - P3.2 output is open-drain
 715   1         - P3.3 output is open-drain
 716   1         - P3.4 output is open-drain
 717   1         - P3.7 output is open-drain
 718   1         ***********************************************************************/
 719   1        P3MDOUT = P3MDOUT_B0__PUSH_PULL | P3MDOUT_B1__OPEN_DRAIN
 720   1            | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN | P3MDOUT_B4__OPEN_DRAIN
 721   1            | P3MDOUT_B7__OPEN_DRAIN;
 722   1        // [P3MDOUT - Port 3 Output Mode]$
 723   1      
 724   1        // $[P3MDIN - Port 3 Input Mode]
 725   1        // [P3MDIN - Port 3 Input Mode]$
 726   1      
 727   1      }
 728          
 729          extern void
 730          LFOSC_0_enter_DefaultMode_from_RESET (void)
 731          {
 732   1        // $[LFO0CN - Low Frequency Oscillator Control]
 733   1        /***********************************************************************
 734   1         - Internal L-F Oscillator Enabled
 735   1         ***********************************************************************/
 736   1        LFO0CN |= LFO0CN_OSCLEN__ENABLED;
 737   1        // [LFO0CN - Low Frequency Oscillator Control]$
 738   1      
 739   1        // $[Wait for LFOSC Ready]
 740   1        while ((LFO0CN & LFO0CN_OSCLRDY__BMASK) != LFO0CN_OSCLRDY__SET)
 741   1          ;
 742   1        // [Wait for LFOSC Ready]$
 743   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 13  

 744   1      }
 745          
 746          extern void
 747          TIMER16_3_enter_DefaultMode_from_RESET (void)
 748          {
 749   1        // $[Timer Initialization]
 750   1        // Save Timer Configuration
 751   1        uint8_t TMR3CN0_TR3_save;
 752   1        TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 753   1        // Stop Timer
 754   1        TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 755   1        // [Timer Initialization]$
 756   1      
 757   1        // $[TMR3CN1 - Timer 3 Control 1]
 758   1        /***********************************************************************
 759   1         - Capture high-to-low transitions on the T2 input pin
 760   1         - Timer will only reload on overflow events
 761   1         - Suspend Timer Synchronization Status = 0x00
 762   1         ***********************************************************************/
 763   1        SFRPAGE = 0x10;
 764   1        TMR3CN1 = TMR3CN1_T3CSEL__PIN | TMR3CN1_RLFSEL__NONE
 765   1            | (0x00 << TMR3CN1_STSYNC__SHIFT);
 766   1        // [TMR3CN1 - Timer 3 Control 1]$
 767   1      
 768   1        // $[TMR3CN0 - Timer 3 Control]
 769   1        /***********************************************************************
 770   1         - Timer 3 clock is the low-frequency oscillator divided by 8 
 771   1         ***********************************************************************/
 772   1        SFRPAGE = 0x00;
 773   1        TMR3CN0 |= TMR3CN0_T3XCLK__LFOSC_DIV_8;
 774   1        // [TMR3CN0 - Timer 3 Control]$
 775   1      
 776   1        // $[TMR3H - Timer 3 High Byte]
 777   1        /***********************************************************************
 778   1         - Timer 3 High Byte = 0xD8
 779   1         ***********************************************************************/
 780   1        TMR3H = (0xD8 << TMR3H_TMR3H__SHIFT);
 781   1        // [TMR3H - Timer 3 High Byte]$
 782   1      
 783   1        // $[TMR3L - Timer 3 Low Byte]
 784   1        /***********************************************************************
 785   1         - Timer 3 Low Byte = 0xF0
 786   1         ***********************************************************************/
 787   1        TMR3L = (0xF0 << TMR3L_TMR3L__SHIFT);
 788   1        // [TMR3L - Timer 3 Low Byte]$
 789   1      
 790   1        // $[TMR3RLH - Timer 3 Reload High Byte]
 791   1        /***********************************************************************
 792   1         - Timer 3 Reload High Byte = 0xD8
 793   1         ***********************************************************************/
 794   1        TMR3RLH = (0xD8 << TMR3RLH_TMR3RLH__SHIFT);
 795   1        // [TMR3RLH - Timer 3 Reload High Byte]$
 796   1      
 797   1        // $[TMR3RLL - Timer 3 Reload Low Byte]
 798   1        /***********************************************************************
 799   1         - Timer 3 Reload Low Byte = 0xF0
 800   1         ***********************************************************************/
 801   1        TMR3RLL = (0xF0 << TMR3RLL_TMR3RLL__SHIFT);
 802   1        // [TMR3RLL - Timer 3 Reload Low Byte]$
 803   1      
 804   1        // $[TMR3CN0]
 805   1        /***********************************************************************
 806   1         - Start Timer 3 running
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 14  

 807   1         ***********************************************************************/
 808   1        TMR3CN0 |= TMR3CN0_TR3__RUN;
 809   1        // [TMR3CN0]$
 810   1      
 811   1        // $[Timer Restoration]
 812   1        // Restore Timer Configuration
 813   1        TMR3CN0 |= TMR3CN0_TR3_save;
 814   1        // [Timer Restoration]$
 815   1      
 816   1      }
 817          
 818          extern void
 819          TIMER16_4_enter_DefaultMode_from_RESET (void)
 820          {
 821   1        // $[Timer Initialization]
 822   1        // Save Timer Configuration
 823   1        uint8_t TMR4CN0_TR4_save;
 824   1        SFRPAGE = 0x10;
 825   1        TMR4CN0_TR4_save = TMR4CN0 & TMR4CN0_TR4__BMASK;
 826   1        // Stop Timer
 827   1        TMR4CN0 &= ~(TMR4CN0_TR4__BMASK);
 828   1        // [Timer Initialization]$
 829   1      
 830   1        // $[TMR4CN1 - Timer 4 Control 1]
 831   1        /***********************************************************************
 832   1         - Capture high-to-low transitions on the T2 input pin
 833   1         - Timer will only reload on overflow events
 834   1         - Suspend Timer Synchronization Status = 0x00
 835   1         ***********************************************************************/
 836   1        TMR4CN1 = TMR4CN1_T4CSEL__PIN | TMR4CN1_RLFSEL__NONE
 837   1            | (0x00 << TMR4CN1_STSYNC__SHIFT);
 838   1        // [TMR4CN1 - Timer 4 Control 1]$
 839   1      
 840   1        // $[TMR4CN0 - Timer 4 Control]
 841   1        /***********************************************************************
 842   1         - Timer 4 is clocked by Timer 3 overflows
 843   1         ***********************************************************************/
 844   1        TMR4CN0 &= ~TMR4CN0_T4XCLK__FMASK;
 845   1        TMR4CN0 |= TMR4CN0_T4XCLK__TIMER3;
 846   1        // [TMR4CN0 - Timer 4 Control]$
 847   1      
 848   1        // $[TMR4H - Timer 4 High Byte]
 849   1        /***********************************************************************
 850   1         - Timer 4 High Byte = 0xFF
 851   1         ***********************************************************************/
 852   1        TMR4H = (0xFF << TMR4H_TMR4H__SHIFT);
 853   1        // [TMR4H - Timer 4 High Byte]$
 854   1      
 855   1        // $[TMR4L - Timer 4 Low Byte]
 856   1        /***********************************************************************
 857   1         - Timer 4 Low Byte = 0xFE
 858   1         ***********************************************************************/
 859   1        TMR4L = (0xFE << TMR4L_TMR4L__SHIFT);
 860   1        // [TMR4L - Timer 4 Low Byte]$
 861   1      
 862   1        // $[TMR4RLH - Timer 4 Reload High Byte]
 863   1        /***********************************************************************
 864   1         - Timer 4 Reload High Byte = 0xFF
 865   1         ***********************************************************************/
 866   1        TMR4RLH = (0xFF << TMR4RLH_TMR4RLH__SHIFT);
 867   1        // [TMR4RLH - Timer 4 Reload High Byte]$
 868   1      
 869   1        // $[TMR4RLL - Timer 4 Reload Low Byte]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        09/27/2021 09:12:36 PAGE 15  

 870   1        /***********************************************************************
 871   1         - Timer 4 Reload Low Byte = 0xFE
 872   1         ***********************************************************************/
 873   1        TMR4RLL = (0xFE << TMR4RLL_TMR4RLL__SHIFT);
 874   1        // [TMR4RLL - Timer 4 Reload Low Byte]$
 875   1      
 876   1        // $[TMR4CN0]
 877   1        /***********************************************************************
 878   1         - Start Timer 4 running
 879   1         ***********************************************************************/
 880   1        TMR4CN0 |= TMR4CN0_TR4__RUN;
 881   1        // [TMR4CN0]$
 882   1      
 883   1        // $[Timer Restoration]
 884   1        // Restore Timer Configuration
 885   1        TMR4CN0 |= TMR4CN0_TR4_save;
 886   1        // [Timer Restoration]$
 887   1      
 888   1      }
 889          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    422    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
